plugins {
    id 'org.springframework.boot' version '1.5.19.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'com.jfrog.bintray' version '1.7.3'
    id 'org.sonarqube' version '2.7'
    id 'maven-publish'
    id 'java'
}

ext.JAVA_GRADLE = "$rootDir/gradle/java.gradle"
ext.PUBLISH_GRADLE = "$rootDir/gradle/publish.gradle"
ext.RELEASE_GRADLE = "$rootDir/gradle/release.gradle"
ext.SONAR_GRADLE = "$rootDir/gradle/sonar.gradle"

allprojects {
    def gitVersion = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            ignoreExitValue true
            commandLine 'git', 'describe', '--tags', '--abbrev=0', '--match', 'v[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*'
            standardOutput = stdout
        }
        def version = stdout.toString().trim()
        return !version.isEmpty() ? version - 'v' : '1.0.0-SNAPSHOT'
    }

    group = "io.sixhours"
    version = gitVersion()
}

subprojects {
    apply from: JAVA_GRADLE
    apply from: PUBLISH_GRADLE
    apply from: RELEASE_GRADLE
    apply plugin: 'io.spring.dependency-management'

    jar {
        manifest {
            attributes('Implementation-Title': project.name)
            attributes('Implementation-Version': project.version)
            attributes('Build-Time-ISO-8601': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"))
        }
    }

    repositories {
        jcenter()
    }

    ext {
        springBootVersion = '2.2.1.RELEASE'
        springCloudVersion = 'Hoxton.RELEASE'
        elasticacheClientVersion = '1.1.1'
        commonsLoggingVersion = '1.2'
        testcontainersVersion = '1.12.3'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
        dependencies {
            dependency "com.amazonaws:elasticache-java-cluster-client:${elasticacheClientVersion}"
            dependency "commons-logging:commons-logging:${commonsLoggingVersion}"
            dependency "org.testcontainers:testcontainers:${testcontainersVersion}"
        }
    }
}
